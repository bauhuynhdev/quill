{"version":3,"file":"msWord.js","names":["ignoreRegexp","idRegexp","indentRegexp","parseListItem","element","html","style","getAttribute","idMatch","match","id","Number","indentMatch","indent","typeRegexp","RegExp","typeMatch","type","normalizeListItem","doc","msoList","Array","from","querySelectorAll","ignored","others","forEach","node","shouldIgnore","push","parentNode","removeChild","documentElement","innerHTML","listItems","map","filter","parsed","length","childListItems","current","shift","nextElementSibling","ul","document","createElement","listItem","li","setAttribute","appendChild","replaceChild","slice","_ref","e","normalize"],"sources":["../../../../src/modules/normalizeExternalHTML/normalizers/msWord.ts"],"sourcesContent":["const ignoreRegexp = /\\bmso-list:[^;]*ignore/i;\r\nconst idRegexp = /\\bmso-list:[^;]*\\bl(\\d+)/i;\r\nconst indentRegexp = /\\bmso-list:[^;]*\\blevel(\\d+)/i;\r\n\r\nconst parseListItem = (element: Element, html: string) => {\r\n  const style = element.getAttribute('style');\r\n  const idMatch = style?.match(idRegexp);\r\n  if (!idMatch) {\r\n    return null;\r\n  }\r\n  const id = Number(idMatch[1]);\r\n\r\n  const indentMatch = style?.match(indentRegexp);\r\n  const indent = indentMatch ? Number(indentMatch[1]) : 1;\r\n\r\n  const typeRegexp = new RegExp(\r\n    `@list l${id}:level${indent}\\\\s*\\\\{[^\\\\}]*mso-level-number-format:\\\\s*([\\\\w-]+)`,\r\n    'i',\r\n  );\r\n  const typeMatch = html.match(typeRegexp);\r\n  const type = typeMatch && typeMatch[1] === 'bullet' ? 'bullet' : 'ordered';\r\n\r\n  return { id, indent, type, element };\r\n};\r\n\r\n// list items are represented as `p` tags with styles like `mso-list: l0 level1` where:\r\n// 1. \"0\" in \"l0\" means the list item id;\r\n// 2. \"1\" in \"level1\" means the indent level, starting from 1.\r\nconst normalizeListItem = (doc: Document) => {\r\n  const msoList = Array.from(doc.querySelectorAll('[style*=mso-list]'));\r\n  const ignored: Element[] = [];\r\n  const others: Element[] = [];\r\n  msoList.forEach((node) => {\r\n    const shouldIgnore = (node.getAttribute('style') || '').match(ignoreRegexp);\r\n    if (shouldIgnore) {\r\n      ignored.push(node);\r\n    } else {\r\n      others.push(node);\r\n    }\r\n  });\r\n\r\n  // Each list item contains a marker wrapped with \"mso-list: Ignore\".\r\n  ignored.forEach((node) => node.parentNode?.removeChild(node));\r\n\r\n  // The list stype is not defined inline with the tag, instead, it's in the\r\n  // style tag so we need to pass the html as a string.\r\n  const html = doc.documentElement.innerHTML;\r\n  const listItems = others\r\n    .map((element) => parseListItem(element, html))\r\n    .filter((parsed) => parsed);\r\n\r\n  while (listItems.length) {\r\n    const childListItems = [];\r\n\r\n    let current = listItems.shift();\r\n    // Group continuous items into the same group (aka \"ul\")\r\n    while (current) {\r\n      childListItems.push(current);\r\n      current =\r\n        listItems.length &&\r\n        listItems[0]?.element === current.element.nextElementSibling &&\r\n        // Different id means the next item doesn't belong to this group.\r\n        listItems[0].id === current.id\r\n          ? listItems.shift()\r\n          : null;\r\n    }\r\n\r\n    const ul = document.createElement('ul');\r\n    childListItems.forEach((listItem) => {\r\n      const li = document.createElement('li');\r\n      li.setAttribute('data-list', listItem.type);\r\n      if (listItem.indent > 1) {\r\n        li.setAttribute('class', `ql-indent-${listItem.indent - 1}`);\r\n      }\r\n      li.innerHTML = listItem.element.innerHTML;\r\n      ul.appendChild(li);\r\n    });\r\n\r\n    const element = childListItems[0]?.element;\r\n    const { parentNode } = element ?? {};\r\n    if (element) {\r\n      parentNode?.replaceChild(ul, element);\r\n    }\r\n    childListItems.slice(1).forEach(({ element: e }) => {\r\n      parentNode?.removeChild(e);\r\n    });\r\n  }\r\n};\r\n\r\nexport default function normalize(doc: Document) {\r\n  if (\r\n    doc.documentElement.getAttribute('xmlns:w') ===\r\n    'urn:schemas-microsoft-com:office:word'\r\n  ) {\r\n    normalizeListItem(doc);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}