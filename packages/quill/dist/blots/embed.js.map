{"version":3,"file":"embed.js","names":["EmbedBlot","TextBlot","GUARD_TEXT","Embed","constructor","scroll","node","contentNode","document","createElement","setAttribute","Array","from","domNode","childNodes","forEach","childNode","appendChild","leftGuard","createTextNode","rightGuard","index","offset","restore","range","textNode","text","data","split","join","prev","prevLength","length","insertAt","startNode","startOffset","parent","insertBefore","create","next","update","mutations","context","mutation","type","target"],"sources":["../../src/blots/embed.ts"],"sourcesContent":["import type { ScrollBlot } from 'parchment';\r\nimport { EmbedBlot } from 'parchment';\r\nimport TextBlot from './text.js';\r\n\r\nconst GUARD_TEXT = '\\uFEFF';\r\n\r\nexport interface EmbedContextRange {\r\n  startNode: Node | Text;\r\n  startOffset: number;\r\n  endNode?: Node | Text;\r\n  endOffset?: number;\r\n}\r\n\r\nclass Embed extends EmbedBlot {\r\n  contentNode: HTMLSpanElement;\r\n  leftGuard: Text;\r\n  rightGuard: Text;\r\n\r\n  constructor(scroll: ScrollBlot, node: Node) {\r\n    super(scroll, node);\r\n    this.contentNode = document.createElement('span');\r\n    this.contentNode.setAttribute('contenteditable', 'false');\r\n    Array.from(this.domNode.childNodes).forEach((childNode) => {\r\n      this.contentNode.appendChild(childNode);\r\n    });\r\n    this.leftGuard = document.createTextNode(GUARD_TEXT);\r\n    this.rightGuard = document.createTextNode(GUARD_TEXT);\r\n    this.domNode.appendChild(this.leftGuard);\r\n    this.domNode.appendChild(this.contentNode);\r\n    this.domNode.appendChild(this.rightGuard);\r\n  }\r\n\r\n  index(node: Node, offset: number) {\r\n    if (node === this.leftGuard) return 0;\r\n    if (node === this.rightGuard) return 1;\r\n    return super.index(node, offset);\r\n  }\r\n\r\n  restore(node: Text): EmbedContextRange | null {\r\n    let range: EmbedContextRange | null = null;\r\n    let textNode: Text;\r\n    const text = node.data.split(GUARD_TEXT).join('');\r\n    if (node === this.leftGuard) {\r\n      if (this.prev instanceof TextBlot) {\r\n        const prevLength = this.prev.length();\r\n        this.prev.insertAt(prevLength, text);\r\n        range = {\r\n          startNode: this.prev.domNode,\r\n          startOffset: prevLength + text.length,\r\n        };\r\n      } else {\r\n        textNode = document.createTextNode(text);\r\n        this.parent.insertBefore(this.scroll.create(textNode), this);\r\n        range = {\r\n          startNode: textNode,\r\n          startOffset: text.length,\r\n        };\r\n      }\r\n    } else if (node === this.rightGuard) {\r\n      if (this.next instanceof TextBlot) {\r\n        this.next.insertAt(0, text);\r\n        range = {\r\n          startNode: this.next.domNode,\r\n          startOffset: text.length,\r\n        };\r\n      } else {\r\n        textNode = document.createTextNode(text);\r\n        this.parent.insertBefore(this.scroll.create(textNode), this.next);\r\n        range = {\r\n          startNode: textNode,\r\n          startOffset: text.length,\r\n        };\r\n      }\r\n    }\r\n    node.data = GUARD_TEXT;\r\n    return range;\r\n  }\r\n\r\n  update(mutations: MutationRecord[], context: Record<string, unknown>) {\r\n    mutations.forEach((mutation) => {\r\n      if (\r\n        mutation.type === 'characterData' &&\r\n        (mutation.target === this.leftGuard ||\r\n          mutation.target === this.rightGuard)\r\n      ) {\r\n        const range = this.restore(mutation.target as Text);\r\n        if (range) context.range = range;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default Embed;\r\n"],"mappings":"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","ignoreList":[]}